// 项目类
1.项目的技术要点/功能模块实现/项目中的难点有哪些，怎么解决的/项目中有哪些你不满意的地方/如果现在让你做，你可以怎么做？/做过最得意的是什么项目/
2.关于版本控制系统：一般可以讲svn/git就行/优缺点/怎么使用/具体命令行又什么区别和作用？
3.你通常用什么数据格式与服务端交互：json/xml|json、xml解析方式的底层是如何处理的？
4.掌握的其他编程语言：Java/js/h5/css
5.常见的第三方库：起码写5种/写出来的就是最重要、常见/需要涉及到UI、网络、动画、缓存等每个方面/一定要知道源码
6.iOS的设计模式：MVC/MVVM必须要搞透
7.代码复用、封装、重构、敏捷开发、快速迭代、codeReview
8.如何让imageNamed同时兼容3.x/4.x系统/以及不去缓存
9.如何实现从外部打开App
10.有没有写过自定义控件
11.怎么把敏感字段变成**
12.iCloud包含了哪些技术和服务？
13.HealthKit/HomeKit分别是什么？
14.Apple Pay是什么？和应用内支付有什么不同？
15.iBeacons是什么？
16.self/self.有什么区别？
17.id/nil代表是什么？
18.类别的作用？
19.推荐一下你认为好的App、为什么？


// 上古时代面试题：iOS6.0
1.定义属性：什么时候使用copy/什么时候使用assign、retain ///为什么要使用定义属性：什么时候使用copy？？？
2.什么时候需要使用delegate/什么时候需要使用notification /// delegate/block/notification有什么不同点？？？
3.view声明周期的调用顺序：loadview->viewDidUnload /// 这些函数中需要执行什么操作？？？
4.iOS x.x的新特性
5.什么是kvc/什么是kvo ///kvc/kvo的工作原理
6.对象什么时候被release?
7.iphone OS有没有垃圾回收机制：没有。对比一下java的垃圾回收机制
8.controller中：didReceiveMemoryWarning是在什么时候调用，默认操作是什么？
Q.内存超过阙值；尝试释放view
9.深拷贝/浅拷贝的区别？
10.类别的作用？继承/类别在实现中有什么区别？
11.类别/类扩展的区别？
12.代理delegate/通知/block之间有什么区别？
13.iOS怎么做数据持久化？coredata/sqlite之间又什么联系？coredata是关系型数据库吗？
14.说说Objective-C管理内存有几种方法？
15.说说iOS中常用的多线程？最好能结合代码好好说；在哪里用到了多线程？三种多线程哪种会比较全面一些，
然后谈一谈线程安全问题的解决方案？
16.block在ARC/MRC中用法有什么区别和联系？
17.常用的iOS设计模式有哪些？
18.简述苹果开发者的认证过程：申请账号/打包/上传/打回/提交/开服都要懂；
19.使用过哪些第三方库？jsonKit/AFNetworking/SnapKit/MJRefresh///要有针对性，涉及到每个方面；
20.怎么实现UITableView的懒加载？
21.iOS开发中常见的异常有哪些？
22.什么时候使用栈/队列？什么时候使用链表/数组？
23.什么是LRU算法？实现缓存/怎么操作？
24.UITableView的重用机制：描述/好处
25.简述objc的内存管理：这个真的是重点/需要好好理解组织语言
26.你理解的MVC是什么？你理解的MMVVM又是什么？
27.NSURLConnection/ASIHTTPRequest哪个更好？
28.写入一个插入排序：一般使用C语言/Java写
29.obj-c有私用方法吗？有私有变量吗？没有私用方法/有私有变量
30.什么是目标-动作机制？
31.readwrite/readonly的使用？
31.ViewController的loadView是在什么时候被调用的？
32.app之间怎么做跳转？一个app就是一个进程/所以进程/线程之间都是可以通信；
怎么在浏览器中返回App；
33.iOS有哪些性能分析工具？（这些基本没有接触过）
34.性能优化：重点
35.静态初始化什么场合可以使用？什么场合不能使用？
36.导致app异常假死的情况有哪些？有什么解决方案？
37.NSNotifacation(通知)是同步/异步？
38.怎么为App设计缓存？
39.比较两个版本号的大小？（比较字符串之间的大小）
40.obc中可修改/不可修改类型？
41.与property结合的时候怎么有效的避免内存泄漏？
42.Objective-C可以多重继承吗？不能/可以实现多个接口吗？能
重写类的方法用继承extend好还是分类category好？/继承、重写一个类和类目哪个好？
43.线程/进程之间的区别和联系？
44.堆/栈的区别？
45.为什么内置类的Delegate要使用assign，而不使用retain? //防止循环引用、怎么会发生循环引用
46.Objective-C语言有什么特点？swift语言有什么特点？
47.iOS中类有哪些通讯方式？
48.alloc/dealloc...retain/release之间的区别是什么？
49.简述Objective-C的内存管理机制：如何检测内存泄漏？
50.iOS中视图控制器的生命周期有哪些？
51.通知/代理/block之间的区别和联系？
52.简述assign/retain/copy/weak/strong的区别？
53.消息推送中心的过程？
54.如何检测一个iOS设备的性能？
55.指针函数和函数指针有什么区别？
56.怎样才能一次遍历就能确认链表中存在环？
57.请简单说一下以下几个http状态码的含义：200，302，304，404，501
58.nil和NULL有什么区别？
59.面向对象的三大特征？请做简单介绍。
60.重写NSString的setter/getter方法。
61.什么是懒加载？
62.为什么category只能为对象添加方法？却不能添加成员方法？
63.简述NSInteger* a/NSInteger a的区别？
64.block和gcd的并发执行？
65.Xib/代码方法创建界面的优缺点？
66.关于Objective的异常处理？
68.在iOS开发中，https通讯在什么位置来保障安全？NSURLRequest/NSURLConnection；
69.block和gcd的并发执行；
70.app一个页面crash、你可以用什么工具去查内存之类的状态；


关于View的一些高级动画：目前是一点都不会


//笔试题
1.给定链表的头指针和一个结点指针，在O(1)时间删除该结点。
链表结点的定义如下：
struct ListNode {
    int m_nKey;
    ListNode* m_pNext;
}
函数的声明：void DeleteNode(ListNode* pListHead, ListNode* pToBeDeleted);
2.语句倒序：I am Bruch；（语言随意：不能使用伪代码）
3.手写“冒泡排序”/“堆排序”/“选择排序”/“插入排序”/“二分查找”
4.将一个链表逆序？/输出一个字符串是否对称？/输出树的深度？
5.定义一个标准宏MIN：输入两个参数并返回最小值？
6.C语言中默认的随机数random()是从x->y?
7.IBOutlet UIView *view;
@property (nonatomic,retain) UIView *view;
以上view对象需要release吗？
8.手写Objective-C的单例？
9.id obj = [[NSMutableArray alloc]init];/id obj = [NSMutableArray array];初始化
有什么不同？
10.在ARC模式下，autoreleasepool的使用？（使用伪代码）/autoreleasepool的作用？
11.id obj = [[[NSMutableArray alloc]init] autorelease];obj在什么时候释放？有什么
方法可以让obj马上释放？（用伪代码表示）
12.for(int index = 0; index < 20; index++) {
    NSString *tempStr = @"tempStr";
    NSLog(tempStr)
    NSNumber *tempNumber = [NSNumber numberWithInt:2];
    NSLog(tempNumber)
}
这段代码有什么问题？会不会导致内存泄漏(多线程)/在内存紧张的设备上做大循环时
简述自动释放池的工作原理/工作过程？自动释放池是写在循环内好还是循环外好？为什么？
13.使用loadView/viewDidLoad/viewDidUnload分别在什么地方调用？做什么工作？
Q.当view为nil的时候调用loadView()->view完成加载调用viewDidLoad()->view释放
时调用viewDidUnload()方法；
14.编写函数：输入Array从小到大排序后输出
15.编写函数：输入数组、判断每个元素出现的次数
16.输入一个函数：v1>v2 返回1/v1==v2 返回0/v1<v2 返回-1
17.NSString *name; [name release]; // 执行代码会出现什么结果？简述原因
18.@property (copy) NSString *name; // 给出name的setting方法

14.程序运行报错：请找出错误并改正
#include <stdio.h>
#include <malloc.h>

typedef struct {
	TNode* left;
	TNode* right;
	int value;
} TNode;
14.写出以下操作以后person的retain count是多少？
Person *person = [Person alloc] init]；
[person retain];
[person release];
[person release];
15.如何判断一个字典是空的？
16.用宏写一个MIN：求两个数中的最小值。

//面试题：技术部分
1.什么是操作系统？
Q.直接运行在硬件上的系统软件，其他任何软件都必须在操作系统上运行；
2.iOS程序在执行main函数之前做了哪些操作？
Q.
3.一个App可以有几个UIWindow？
Q.
4.view的生命周期分别是什么？
Q.
5.bounds和frame的区别？
Q.
6.-(void)loadView {}做了什么？
Q.
7.NSOperation什么时候从queue中移除？
Q.
8.ViewController生命周期？
Q.
9.NSInteger|int和CGFloat|double有什么区别？
Q.
10.atomic/nonatomic之间的区别？
Q.atomic表示原子操作：set/get方法不能被其他线程中断(线程安全)|缺省属性；
nonatomic表示非原子操作|atomic修饰的属性只表示set/get方法线程安全：不是真正的线程安全；
11.static的作用：
Q.static修饰的变量是静态变量，存储在数据段，在函数结束后变量不释放；
12.单例方法的原理：
 Q.首次调用单例方法时会创建对象，函数结束时指针和对象都不会消失；之后每次调用该方法都不会创建对象；
13.#include/#import的联系和区别：@class代表什么？// @class前置声明一个类
Q.import的功能和include一样：将右边的文件copy到当前import的位置；
import优点：自动防止重复拷贝|include避免重复导入需要加“头文件卫士”；
14.printf和NSLog的区别：
Q.NSLog可以自动换行|NSLog会输出内容时会附加一些系统信息|接受的参数不一样；
15.#import ""和#import <>的区别：
Q.""-当前文件->开发工具->系统/<>-编译器环境->系统环境
16.MVC和MVVM的联系和区别：哈哈哈
17.iOS中常见的单例有哪些？弄懂每一个作用
Q.应用程序实例：UIApplication|消息中心：NSNotificationCenter|文件管理：NSFileManager|应用
程序设置：NSUserDefaults|请求缓存：NSURLCache|应用程序Cookies池：NSHTTPCookieStorage
18.怎么提高客户端的性能？（这点需要深入研究一番）
19.描述UIViewController的生命周期（深入细致描述）
20.列举熟悉cocoa touch框架？AVFoundation/...
21.自动释放池是什么？如果工作？
22.关键字const/volatile有什么含义？
23.普通屏幕/Retina屏幕适配有什么好方法？
24.IBOutlet/IBAction的作用？
25.有哪些方法可以启动一个线程？
26.xib/nib之间的区别？
27.@synthesize xxx是怎么实现的？
28.json解析内部是怎么实现的？
29.试说明SEL和@selector的用途、有什么作用？
30.iOS中App数据持久化机制有哪几种方案？（详细说明）
31.请说明Touch和非Touch事件发生时在系统中的传递过程？（事件传递hitest）
32.怎么获取磁盘空间（How to get disk space left）
33.对象在什么时候会被release？
34.如果开启异步线程？如果想要延迟执行某个线程怎么实现？
35.Oobjective-C语言：数据对象有哪些？与基本数据类型有什么区别？
36.什么是动态绑定？
37.实现代理/协议的过程？
38.self.name/_name之间有什么区别？
39.使用#define声明一个常量，表示1年中有多少秒？(忽略闰年)
40.OC中有私有方法和私有变量吗？没有私有方法、有私有变量
41.解释一下iOS应用沙盒机制
42.iOS应用是如何实现后台多任务处理？
43.category是怎么样一个机制？一般什么时候使用？
44.nonatomic/atomic之间的区别？
45.什么是安全释放？


//游戏方面/sdk
1.接触过Game Center吗？针对游戏有哪些功能？
2.关于id类型、请说明其功能用途和具体用法？
3.id声明的对象有什么特征？



//参考网站：
http://www.cnblogs.com/Piosa/archive/2012/02/22/2363234.html
//难点部分
1.Objective-C项目怎么设置可以全局设置头文件；

数据结构/数据库/操作系统/openGL/ES/计算机网络/软件工程(工作中重要)
编译原理：Xcode/OC/Swift/安卓

// iOS的设计模式
1.代理模式
应用场景：当一个类的某些功能需要由别的类来实现，但是又不确定具体会是哪个类实现。
优势：解耦合
敏捷原则：开放-封闭原则
实例：tableview的 数据源delegate，通过和protocol的配合，完成委托诉求。
列表row个数delegate
自定义的delegate

2.观察者模式
应用场景：一般为model层对，controller和view进行的通知方式，不关心谁去接收，只负责发布信息。
优势：解耦合
敏捷原则：接口隔离原则，开放-封闭原则
实例：Notification通知中心，注册通知中心，任何位置可以发送消息，注册观察者的对象可以接收。
kvo，键值对改变通知的观察者，平时基本没用过。

3.MVC模式
应用场景：是一中非常古老的设计模式，通过数据模型，控制器逻辑，视图展示将应用程序进行逻辑划分。
优势：使系统，层次清晰，职责分明，易于维护
敏捷原则：对扩展开放-对修改封闭
实例：model-即数据模型，view-视图展示，controller进行UI展现和数据交互的逻辑控制。

4.单例模式
应用场景：确保程序运行期某个类，只有一份实例，用于进行资源共享控制。
优势：使用简单，延时求值，易于跨模块
敏捷原则：单一职责原则
实例：[UIApplication sharedApplication]。
注意事项：确保使用者只能通过 getInstance方法才能获得，单例类的唯一实例。
java，C++中使其没有公有构造函数，私有化并覆盖其构造函数。
object c中，重写allocWithZone方法，保证即使用户用 alloc方法直接创建单例类的实例，
返回的也只是此单例类的唯一静态变量。


5.策略模式
应用场景：定义算法族，封装起来，使他们之间可以相互替换。
优势：使算法的变化独立于使用算法的用户
敏捷原则：接口隔离原则；多用组合，少用继承；针对接口编程，而非实现。
实例：排序算法，NSArray的sortedArrayUsingSelector；经典的鸭子会叫，会飞案例。
注意事项：1，剥离类中易于变化的行为，通过组合的方式嵌入抽象基类
2，变化的行为抽象基类为，所有可变变化的父类
3，用户类的最终实例，通过注入行为实例的方式，设定易变行为
防止了继承行为方式，导致无关行为污染子类。完成了策略封装和可替换性。

6.工厂模式
应用场景：工厂方式创建类的实例，多与proxy模式配合，创建可替换代理类。
优势：易于替换，面向抽象编程，application只与抽象工厂和易变类的共性抽象类发生调用关系。
敏捷原则：DIP依赖倒置原则
实例：项目部署环境中依赖多个不同类型的数据库时，需要使用工厂配合proxy完成易用性替换
注意事项：项目初期，软件结构和需求都没有稳定下来时，不建议使用此模式，因为其劣势也很明显，
增 加了代码的复杂度，增加了调用层次，增加了内存负担。所以要注意防止模式的滥用。

MVC是一个框架模式 Model View Controller  模型--视图--控制器  各自处理自己的任务
    M是指数据模型  V是指用户界面  C是指控制器 使用MVC的目的是将M和V的实现代码分离 C存在的目的则是确保M和V的同步
    耦合性低   重用性高  生命周期成本低

最典型的MVC就是JSP + servlet + javabean的模式

//面试题：非技术部分
1.你昨天/本周学习了什么知识？
Q.
2.你为什么热衷软件开发？为什么入行？
Q.
3.5年规划？今年的目标分别是什么？
4.希望从公司学习到什么？
5.工作中遇到什么技术难点（这个一般不是人事问题、但是需要好好总结）
6.你为什么要离职？（这个问题问的还是很多的）
7.上一家公司的工资多少？照实说16k/下一家20k
8.在公司中iOS中有多少人？上家公司的工作流程？自己负责的是什么？（需要好好总结）
9.你拿到几家的offer？（一般建议说1～3家）

CGFloat/Float之间的区别？
NSInteger/int之间的区别？

总结一下UITableView的重用机制？//重点说明

总结一下iOS的内存管理：
1.release/autorelease分别在什么情况下使用？
2.block的内存管理需要注意什么？
3.对象在什么时候会被release？

怎么提高客户端性能？用什么工具可以优化App?
//初级
1.使用ARC（自动引用计数）
ARC不仅可以避免内存泄漏、还有助于性能提升：当程序中对象不再需要的时候、ARC会及时自动销毁对象；
注意：ARC不能避免所有的内存泄漏、比如block/循环引用
2.使用UITableView的时候需要cell的复用(然后讲一下cell复用的概念)
3.View控件尽量设置为不透明：这样绘图系统就可以优化一些绘制操作提升性能；
4.尽量少用xib：当xib被加载到内存的时候，xib文件中所有的内容都会被加载到内存(包括图片)、如果有View还不需要立即使用的话就会导致内存的浪费；
5.避免阻塞主线程；
//中级
//高级

//谈谈UITableView的优化
1.利用cell的复用：可以不用每次都创建cell、表述一下cell的复用机制、场景；//最基础的
2.设计尽量统一cell的样式；//这个没办法避免
3.布局方面：可以提前计算并缓存cell高度、不用每次调用delegate都去计算；
4.遇到复杂页面：可以考虑异步绘制、减少子视图的层级关系；
5.尽量不要动态add/remove子控件、可以在init()中就加载完毕，然后通过hidden控制显示/隐藏；
6.使用调试工具分析问题；

赶集网的面试：1.传值 2.推送 3.数据存储 4.代理/单例
第一轮：推送机制->多线程->开发流程
第二轮：支付

重点：手动内存管理/自动内存管理的原理&步骤&应用

1.读写文件的例子？
2.读写数据库的例子？
3.异步加载网络图片的例子？

总结苹果开发者相关：
1.开发者账号生成的测试证书有效期：1年
关于苹果上架流程：企业证书/个人证书/testflight等

总结推送：
1.从APNS获取device token作为设备唯一标识符

UIImage读取图片：怎么可以避免内存

数据结构；树

怎么让App在后台可以保持活跃

//工作中遇到的困难：
- UI太难了：
- 游戏和原生的交互

一般来讲...一个项目你需要从哪里开始做起：这点很重要...
你需要先写什么、在写什么、
一般来讲：业务相关的可以后来扩充
底层的必须要先写好

//RunTime  运行时：NSString  编译时：NSData
1.NSData *data = [NSString stringWithFormat:@"%d", 12];
2.运行时多态有什么好处？

//runloop
1.runloop的理解；


//iOS推送原理机制：


//网络部分
1.http请求分几部分？
2.get/post有什么区别？


UITableView调用reloadData()会发生什么问题？

- 面试的时候不建议过多评价还有透漏上家公司信息；仅仅限于人事/使用ceo

### 面试题
1. 定义属性的时候，什么情况下使用copy、assign和retain？
2. 对象在什么时候会被release？
3. iphoneOS有没有垃圾回收？
4. 同一个游戏包(GameID相同)怎么区分下载来自哪一个渠道？
5. UITableView怎么做预加载？
6. 懂不懂OpenGL？
7. 知道多线程吗？介绍一下iOS中多线程的情况？平时你喜欢使用哪种？在哪些开发中使用到了多线程？
8. swift中结构体和类之间的区别？
9. 谈谈内存管理：ARC、MRC
10. 什么是堆，什么是栈区
11. keyWindow和一般Window的区别？
12. delegate/通知/block之间的区别？
13. AF2.0和AF3.0之间的区别？AF2.0有常驻子线程而AF3.0没有是什么原因？
14. git rebase/git merge的区别？
15. Int/NSInteger的区别？<br>
int是短整型、NSInteger也是基本数据类型:CGFloat一样、但是NSInteger会根据操作系统(32/64)的位数判断，最大数值是int/long|NSNumber是类。
16. 数组指针/指针数组的区别？
17. 三种动画？各种动画的区别联系？
18. block的循环引用：渐变动画会出现循环引用吗？
19. atomic一定是安全的吗？
20. ViewDidLoad()/loadView()的区别？
21. if(self=[super init]) { //...}为什么需要这样写？[super init]按照常理
只是初始化父类的空间、为什么self可以调用子类的方法？
22. ARC是什么？工作机制详细讲下？
23. 常见的第三方库你见过那些多线程？/有盟、高德地图、AFNetWorking、SDWebImage、FMDB
24. 为什么需要用到单例模式/不使用会怎么样？
25. 简述UITableCell的复用机制。
26. 简述多线程GCD、NSThread、NSOprate; //需要总结
27. 什么是多态？为什么需要使用多态？
28. OC数据对象有哪些？与基本数据类型有什么区别？
29. 简述动态绑定。
30. 在Instruments工具中，用于检查内存泄漏的工具是什么？
31. 在iOS中有哪些常见第三方库：实现的功能是什么？你看过第三方库的源码吗？有过根据需求修改过源码吗？
32. 写一个NSString类的实现；
33. 描述OC和swift的联系和不同；
34. 描述ARC机制的原理和实现；
35. 描述controller和view之间的关系。为什么要使用viewController；
36. 描述SQLite.swift的大致实现原理；
37. 描述IP/TCP/UDP/HTTP几种协议的理解；
38. 描述web Service和Web Api的区别；（发展思路和应用场景）；
39. 描述web后端Session在什么时候产生、什么时候结束？Cookie又是什么关系？
40. iOS的后台运行是什么原理和机制？
41. 创建一个对象、放在可变数组中。释放整个对象会发生什么？释放数组会发生什么？
42. 你常用的设计模式、第三方库？
43. 进程空间中的数据区、代码区、栈区、堆区有什么不同？
44. WWDC是什么？你有关注过WWDC吗？
45. Xcode选择模拟器编译：在Products中生成的二进制文件后缀是什么？
46. 重点理解SEL的用法；

//数据持久化
1.NSCache和数据持久化使用场景有什么区别？
2.常用的数据持久化方法有哪些？各自有什么利弊？


//正则表达式

// 数据库开发：sql语句/连表查询
例1.有两张表，用户表(Z_User)和黑名单表(Z_Blackuser)，userid是Z_User的
主键，Z_BlackUser的外键。现在需要查询用户表中不在黑名单表中的数据，请写出sql语句。

开发中做的事情：软件编码/单元测试/技术难点
面向对象的编程思想

是否参与过GitHubiOS开源项目?
请描述一下你的iOS应用开发流程？
是否熟知CocoaPods?它是什么?如何运行的?
请描述一下Instruments及其作用？

//UI问题
layer和UIView、UIWindow的区别是什么？

// 实习生专题
1.引用和指针有什么区别？
2.进程和线程有什么区别和联系？
3.关键字static的作用、关键字const的含义？
4.交换两个变量的值：不实用第三个变量怎么实现？
5.怎么实现连表查询？ //重点中的重点！！！

请概括一下你在构建iOS应用时的测试过程。iOS应用如何实现对其他语言、日期
格式以及货币单位的支持？

//数据库方面
1.什么是视图？
2.使用索引查询一定可以提高查询性能呢？为什么？ 
3.内联接和外联接的区别？

//类方法
1.类方法随着类的加载而加载、所以类方法不能访问成员变量、
self在对象方法中代表对象、self在类方法中代表类、
self.age = 10代表set方法[self setAge:10];

//单例模式
一般单例模式只能保证跳用类方法的时候、创建的对象是不变的；
参考sdkv3.8可以保证无论什么情况创建的对象都是唯一的；

//block
1.解释一下block、使用block应该注意什么;
2.block的用法？
3.如何避免使用block引起循环引用问题？

//gcd有哪些方法？
1.dispatch_get_current_queue会引起什么问题？
2.

//动画
1.CoreAnimation/CoreGraphics是否使用过？
2.


Xcode支持在一个工程里面新建多个项目


//多线程
1.怎么开启异步线程、如果需要线程过段时间再开启、如果实现？
2.
1.列举常见使用到多线程的地方、2.多线程安全的几种解决办法？

//App的发布流程
1.
2.
3.

//单例
1.创建一个单例并实现？有一种很特别的方式创建

//数据存储
1.单例保存的数据App杀死、数据清空
2.数据库/NSUserDefaults保存的数据在App被杀死数据不会清空、App被卸载数据会清空

###人事问题
1.今年的目标是什么？5年的规划是什么？
2.希望从我们公司学习到什么？
3.住哪里？有没有女朋友？上家工资多少？//按照实际回答即可
4.为什么离职？//这个总结一下
5.公司有多少人？iOS部门有多少人？具体是怎么样的工作流程？
6.App哪些模块是你做的？
7.你投简历投了几家？拿到几个offer；//这个想一下具体回答

//链表/数组的不同

//nullable、__nullable、__Nullable之间的关系？
1.目的：为了兼容swift
2.三者之间没有任何的区别？就是书写的时候位置有不同
3.-(nullable NSString*)method;nonNull表示对象不应该为空、nullable表示对象可以为空?
4.不带下划线在类的前面、写下划线的在类的后面
参考：https://blog.csdn.net/conglin1991/article/details/77159652
建议：使用nullable这样符合属性修饰符的位置、跟copy、strong一样

关于数据结构：一定需要自己好好梳理知识点：
1.二叉树
2.链表
3.哈希表


//重点
1.多线程/数据库/网络编程/输入输出流


//发布代码
1.后台部署服务器、发布代码
2.苹果/安卓上传App、上架应用商店
作为高级开发工程师、必须学会这些、滚瓜烂熟

//网络相关方面
1.有没有用过socket、一般怎么使用？如果预防socket丢包？
2.

//加密算法
1.MD5-概念、应用场景、iOS/Android实现
2.

//相关网址
https://blog.csdn.net/leaf8742/article/details/50960827

//附加
1.访问Stack Overflow
2.开源类库、代码片段；//命名规范、最佳实践和设计模式

###趣味问答
//这一块最好需要有人帮你总结：因为你感觉很自豪的事情在别人看来就是很垃圾！！！
//你最引以为豪的项目是什么？你做的最成功的项目是什么？
你项目有哪些不足？如果是现在给你修改、你可以怎么修改？
Xcode有哪些可以改进的地方、你最爱使用什么方法检查某种新技术是否好用？

///iOS职位要求
### 必须项：
1.丰富的客户端App架构经验、可以独立承担架构设计、主导项目；
2.熟悉iOS的调试工具和方法、crash追踪；
3.精通Objective-C语言/swift语言；
4.精通UI、动画、网络编程(Socket、https/web)、数据库、多线程、
h5/js交互；
5.熟悉常用软件架构模式、算法与数据结构；
6.熟悉CocoaPods、git、svn等工具；
7.至少参加两款商业应用开发并上架AppStore；
8.学习能力强、工作积极主动、有强烈责任心和严谨作风、协作沟通能力、解决问题能力；
### 加分项：
1.提供github账号或者技术博客账号(为开源项目做过贡献)；
2.深入了解iOS动画机制、音频、视频开发经验；
3.熟悉C/C++语言、前端、后端、RN、Weex、H5混合开发；
4.内存泄漏、App性能调优经验优先；
5.了解常用的设计模式，有架构和组件化经验；
6.扎实的计算机基础，了解数据结构和常见算法；
7.有移动端(iOS/Android)脱壳、反混淆相关经验；
8.深入研究AR相关技术的优先；
9.良好的产品和业务sense；
10.有App Store上架作品优先；