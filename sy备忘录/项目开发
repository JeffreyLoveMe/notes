### 项目细节
1.自己的事情自己做：
1).业务参数最好在model中先处理好，直接赋值
2).View需要改变状态最好在View内部先处理好逻辑，外部使用数据去驱动

2.封装代码：
1).所有vc应该有一个基类：DNBaseViewController
2).自定义customView|customModel
Objective-C语言中：UI控件|数组也可以直接用懒加载
设置UI控件：setupUI|custom|system

swift中enum/struct都是比类更厉害

App中哪些需要存放在本机|App中的缓存机制

隐藏View：1.使用隐藏属性、2.将View的宽和高设置为0

如果是数组就是dateList

如果是字典就是DateModel

safeArea // 这是什么意思
constrain to magins //没有作用：为了plus/iPhone X布局尽量到中间

对于swift:我们对所有的view都需要lazy

对于oc:我们也可以lazy

对于cell 我们一般不需要把model传进去 再传出来 我们一般是把cell传出来 然后通过cell拿到indexPath 再通过indexPath拿到model

- 创建UILabel/UIButton有固定方法(不使用系统方法)；
- 封装可以使用的BadgeView；
- 学习snapkit使用方法；
- UIView中不能跳转：使用代理让实现在VC中进行；让View具有公用型

## snapkit中有三个方法
- makeConstraints  //设置布局
- remakeConstraints  //移除以前的布局、重新布局
- updateConstraints //更新布局

# cell上的view必须放在contentView上面

App开发不能限制用户的操作

### 加载刷新
/***********************json按页下载数据******************************/
//1.声明当前页数、总页数

self.page = 1

self.maxPage = 1

//2.首次加载
page传入1-开始网络请求
//3.请求完成：开始赋值
self.page = model.page
self.maxPage = self.maxPage(byTotalSize: model.total, pageSize: model.size)
判断当前页面是否大于最大页面：大于停止刷新
//4.再次网络请求：
page++ //判断是否大于最大页面：大于停止刷新
self.page = model.page
self.maxPage = self.maxPage(byTotalSize: model.total, pageSize: model.size)
判断当前页面是否大于最大页面：大于停止刷新
/////CommunityCommentDetailController.swift

- MVC模型：
M - 写模型：按照文档写属性一一对应；

V - View：可以加一个取cellID的方法
- 第一步：写出所有的属性：给属性布局
- 第二步：将属性的点击事件传出来
- 第三步：设置方法config：可以更新UI
- 1.在view中新建config中需要传进来的属性：用于全局
2.通过代理传出去

C-大布局：代理方法
- 通过sendRequest获取model

1. 一般项目都是使用cocoaPods管理：更加方便；
2. 一般使用Assets管理图片：自己试试；
3. 一般技术用来看后台接口的工具App是什么？？？
4. 一般App不需要什么都写在服务端
5. //这个坐标是在哪里开始算起的：状态栏？导航栏头部、导航栏底部
    _topView = [[UIView alloc]initWithFrame:CGRectMake(0, 20, self.view.frame.size.width, 40)];
read Base value to memory

App哪些信息需要存储在本地：可能会涉及到多表查询

什么是b2b、什么是b2c、什么是c2c

masonry的三个方法具体怎么用？
设置约束
更新约束
删除约束

学会了怎么设置cell自适应：配合设置控件高度为0一起使用；/需要预估高度/可以把内部的高度传出来

一般使用svn管理资源文件、使用git管理代码文件

YYText怎么使用、有什么作用？？？

对json的格式还不是很熟悉

常见App一些功能需要怎么做：业务方面(服务端、客户端之间的通信)

开发静态库和动态库：
静态库解决不了第三方库的重复代码问题、动态库可以；

### 开发技巧
- 阅读需求文档：先抽象类、再分析类与类之间的关联；
- 如果逻辑复杂：可以先写伪代码、然后翻译成代码；
- 可以先写注释，再写代码；
- 开发流程：搭界面->获取网络数据->显示数据到UI；

C语言-OC-swift-java-kotlin-h5-rn

https://www.jianshu.com/u/e15d1f644bea

开放者官网：https://developer.apple.com/cn/
苹果官方API：
- 面向iPad的App开发；
- 为iphone开发；
- 为Apple Watch而设的App
- ARKit 2
- 机器学习
- Siri捷径
- Mac App Store
- WWDC18
- 开放者经验分享

//使用SnapKit给控件添加约束常见错误：https://blog.csdn.net/Haikuotiankong11111/article/details/51800761
1.简单的约束冲突不能有：比如控制了左边和把右边就不能在设置宽度

//cell的自适应：https://www.jianshu.com/p/aee265022414
1. 设置estimatedRowHeight(预估高度)：必须设置

CGFloat的意思是什么？

在swift中enum名称大写、元素小写
在oc中enum名称大写、元素大写

iOS中关于图片缓存和缓存cell的高度

适配：系统适配
iphone尺寸
iPad尺寸

UILabel在Autolayout中可以自动设置高度

必须要看：https://www.cnblogs.com/lihaibo-Leao/p/3471556.html

cell内部如果某一个控件不需要我们可以更新布局为0

//项目中：如果Model中需要新的数据：可以直接在Model中创建->然后拿出来使用
如果某个ui需要改变：可以在内部改变->vc中可以调用方法告诉view你的view显示需要改变

在开发中，我们一般UIButton会使用custom、而不使用system

代码修改以后：必须要测试

NSNotFound
int和NSInteger都是基本数据类型、一般OC使用NSInteger代替int/Swift使用Int、然后需要放在
字典中的话：需要包装：@(NSInteger)

抓包：
1.把电脑的网络共享出来：一般使用网线(网速快)、也可以使用Wi-Fi
2.用手机连接该网络：手动配置ip和端口
3.抓包https还需要安装证书
4.开始抓包

//可以通过mock修改数据
5.保存返回数据：然后修改数据 Save Response...
6.使用本地数据：Map Local

1.为了防止cell的数据混乱：我们需要每次cell刚出现的时候给cell重新赋值、或者移除Cell中的某个控件
2.数据源发生改变：我们就必须要调用reload方法
3.config里面有if就必须有else

https://www.growingio.com/projects/QRe05n9q/homepage

dana@eyee.com
Guhun123

swift中：if可以,判断多个条件
_Nullable //可以为空
_Nonnull //不能为空

自定义UI：如果你希望整个UI都可以点击：可以直接在整个UI上面添加touch方法

http://tool.oschina.net 工具网站

Xcode中有：打开"Main Thread Checker"可以判断线程是否使用合理

swift中：如果是String = ""
如果是类：一般会怎么样？？
一般会声明+实现

给对象赋值不需要初始化

1.什么时候更新model?
1).网络加载数据：更新model；2).本地上传数据：之后更新model；

一般对象我们都设置var
对象赋值不需要init
给对象属性赋值：必须要init

不能欺骗Apple

对于布局：一般不建议写死
一般先把左上角|中点控制好；
然后把宽|高控制好

### 15个问题
 - 自我介绍
 - C语言部分
 - OC部分
 - swift部分
 - UI部分
 
间距：一般不用up|all

尺寸：一般使用up|all

如果对于5s的屏幕：太小了  间距也可以使用up|all

不要判断maxPage/不要过分相信服务端

自己的代码必须有足够的兼容性   

git上面的：stash
fir的使用：怎么使用
一般公司打包：怎么打包

    /*
    屏幕宽度：screenWidth
    需要几行：4行
    每行的最小间距：10
    (screenWidth - (4+1)*10)
    */
    
    UICollectionViewDelegateFlowLayout
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: (screenWidth - 50) * 0.25, height: (screenWidth - 50) * 0.25)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: 10, left: 10, bottom: 10, right: 10)
    }

https://xclient.info
       
bilibili的开源框架

SnapKit布局：我们不用按顺序布局|可以直接先布局底下的样式、再布局上部的样式

可选类型 ?? "" //防止可选类型为nil

可以规定约束的优先级

OC|Swift相互调用：
https://blog.csdn.net/yishengzhiai005/article/details/53927569

// 组件化开发实践
https://www.jianshu.com/p/f472fa9f0616

//RxSwift

swift中一般都需要init|对于Int等数据类型、默认赋值等于-1
为什么是-1呢？？？？因为-1代表着不正确

www.hangge.com

js框架+原生渲染 react native

flutter+原生 

weex

vue

自己的问题自己把关：不能让别人给自己把关

找问题一定要从外向内找、找不到在找旁边的
千万不要还没有找进去  就开始在旁边找
这样很能迷失方向：让人很烦躁、不安   然后找不到答案、一定要静下心来

写代码一定要细心  超级细心

pod repo update // 更新电脑本地保存的版本库中的版本信息

遇到{就会给它分配一个存储空间、直到遇到}该存储空间会被释放

如果只需要上拉加载、不需要下拉刷新

这时候可以把下拉刷新不写：直接在viewDidLoad() {
    中网络请求：然后执行上拉加载：最开始的网络请求可以设置为page = 1
}

swift怎么写网络请求：

OC怎么处理网络请求：

UITableViewHeaderFooterView这个UIView怎么说？

// 将一个图片位于什么部位开始拉伸(以原点为中心点)
// 返回一个UIImage
UIImage.resiezableImage(with: UIImage(named: "calendar_bg_white"), edgeInsets: UIEdgeInsets(top: 0.5, left: 0.5, bottom: 0.5, right: 0.5))

拿到页面首先分析UI布局  写出UI界面    然后再分析要不要分页加载

每次写代码如果有疑问  或者测试改了代码   都需要做标记：// FIXME  然后最重要的是
必须在发版的时候全局搜索FIXME

1.严格按照设计稿设计UI
2.一般设置UI的时候一定要想到怎么当文字过长会怎么样

如果UI显示不正确  变小了    考虑可能的原因   图片压缩了   图片有边角   但是UI没有给图片   这样一般让图片和UI一样大

如果App的跳转比较像（就是model不一样）
我们可以对model进行赋值
新建一个model   对model进行赋值

一个需求的开发过程：
1.需求讨论阶段：

OC中可以为nil \\\\那么swift必须用可选类型接受

0.账号：zaliebusiness@126.com|Eyee@934934
1.证书：12月3号
2.配置文件：douniu_Adhoc
3.fir账号-编辑-上传
huarentrade@126.com
Eyee@934

swift中_代表调用的时候可以忽略参数名称

以后涉及到分页加载......必须参考使用dana的CommunityDiscoverViewController页面

第一：分页加载问题：怎么做分页
参考CommunityDiscoverViewController
第二：data后面紧跟[]、证明后面是数组、需要转换成array   然后把这个数组作为数据源   开始操作代码

// Mock数据网址
http://mock.api.eyee.com/editor

在xib中，command选中两个控件   可以让他们等宽、然后修改比例

GIO转化变量指的是：支付成功以后   这个是通过什么方式转化过来的
先选择C2C支付成功->然后选择转化变量  看数据

数据库问的问题：数据的增删改查、
多表的链接查询、数据回滚

内部用的什么类型数据
外部就必须用什么类型的数据接受

不能内部是字典/外部是数组

如果json是一个model   你就用字典接受
然后传出来的必须也是model
"data":{
    // 这是一个字典
}
外层也必须使用model去接收->然后取出来model里面的list->如果需要分页还需要拼接list

如果json是数组的话。必须用数组接受
"data"[{
    // 这是一个数组
},{
    
}]
必须使用数组去接受-> 然后外层也必须使用数组来接受：可以直接等于

抓包的原理

https可以被抓包吗

抓包：怎么配置：记录下来

腾讯文档：怎么使用

http://idea.lanyus.com/

swift中main函数消失：https://blog.csdn.net/zhao18933/article/details/46640657

command + D   //收藏书签

https://github.com/celiaDeveloper?tab=repositories


1.修复线上bug/增加线上内容...base分支

2.新功能/新需求_01...新建分支 <br>
3.新功能/新需求_02...新建分支 <br>
4.新功能/新需求_03...新建分支 <br>

发版本...把1，2，3，4合并到发版分支->新建v3.3.x发版本分支

cell因为是复用的、所以cell有if/就必须有else
不让做不到让数据->驱动->UI

[A hasPrefix:B]; // A是否是以B字符开头的

截屏引流

程序间通信：第一我们需要把string->url
我们需要判断是否可以打开url->可以打开我们在打开->打开以后，我们再通过AppDelegate中代理回传

国际化：文字的国际化、图片的国际化 ////重点追踪

iOS/Android/web/小程序/rn/flutter/php

// UICollectionViewCell的自适应：
1.我们可以现在外部给cell一个预估的宽/高
2.然后在内部给cell进行内容向外部撑开
3.cell内部的UILabel不要设置高度

https://github.com/duf1991/DYFBuyApp

//写App之前
1.确定App的整体框架；
2.封装各种UI（图片+文字的btn/toast/alert）
3.网络请求封装
4.确定各种数字/文字等UI显示
5.确定开发需要的适配代码(怎么做适配)
6.设置BaseViewController
以上就是最基本的一些封装和前期准备。。。然后再考虑你要写App。。。你要做业务开发

//时间格式
12小时制："yyyy-MM-dd HH:mm:ss"
24小时制：“yyyy-MM-dd hh:mm:ss”

//任何功能都需要跟安卓对比
1.对比之间的显示有没有什么问题；
2.对比数据刷新以后有没有什么问题；
3.对比点击/挑转/分享等操作有什么问题；

在vc中不要初始化UI相关的逻辑：
1.因为在init里面、self.view还没有被创建、直接在
初始化中调用会导致loadView()/viewDidLoad()提前被
调用、
2.加载xib的时候关联的IBOutlet组件未被加载到内存的时候直接
调用会导致nil
//self.view被使用会调用loadView()创建并执行viewDidLoad()

占位图：全局占位图、底部占位图
实现方式不一样：全局占位图隐藏UITableView、底部占位图直接使用cell

UICollectionViewCell如果需要等间距显示的话：需要重写UICollectionFlowLayout

//怎么称为一个优秀的leader
iOS开发工程师->iOS开发主管->iOS开发leader/移动端开发leader->大前端开发leader/副研发总监->CTO
产品专员->产品经理->高级产品经理->产品总监->COO
数据分析师->数据工程师->数据架构师/数据挖掘工程师->CTO/数据科学家

//职业路线
iOS->Android->flutter/RN->H5/.->php->go->java

冒烟测试
渠道归因
截屏引流

对象想要使用：要不初始化/要不直接赋值、不然不能是使用
如果一个对象没有被销毁、则这个对象带着的属性和方法一致存在、保持不变

id/Class/SEL之间的区别？分别代表什么意思？
格式化：obj/String -> %@ / float -> %f
NSPredicate //过滤
NSAssert //代码调试

积分墙
atomic表示原子操作，即set方法get方法不可被其他线程中断/但是不一定线程安全/缺省属性
怎么监听UIScollView以及子视图的上滑/下滑(百分百准备的那种)

iOS中的指令集是什么意思？
符号表：xxx

关于Rxswift
关于RN
关于flutter

ZLLog埋点不在pod内部：不需要备注
！！！推送/牛牛提醒在pod内部：需要备注！！！


设置masksToBounds = true就不显示阴影