/**
名称：iOS笔记
作者：谢吴军
*/
/**************************前期概述**************************/
//开班须知
1.建议学习时间：
上午9:00-12:00 | 下午14:00-18:00 | 晚上19:30-21:30
2.学习内容：
基础班(4周)：C语言 | Objective-C | swift语言
就业班(4个月)：多线程 | iOS开发 | HTML | React Native
3.学习方法：
1).专心听讲：注重听懂、理解
2).建议准备笔记本：记录重点
3).先自己解决->百度->谷歌

//iOS开发
1.概述：
1).iOS是一款由苹果公司开发的操作系统(OS)
2).什么是iOS开发：开发iphone/iPad手机软件开发
3).主流操作系统：iOS、Android、黑莓
2.准备：
1).编程语言：swift > Objective-C > C语言
2).开发工具：Xcode
3).电脑系统：MacOS
4).真机设备：iphone|ipad
5).iOS证书：调试证书|发布证书
3.Apple硬件
1).iPhone：xxx
2).iPad：2010年发布iPad1(大概一年发布一款)
3).ipad mini：2012年发布iPad mini1
4).ipod Touch：没有打电话功能的iphone
5).Apple TV：需要翻墙(国内被小米模仿)
4.Mac系统
1).Dock工具栏：应用程序列表(默认位于屏幕下方)
2).系统偏好设置：windows的控制面板
3).safari浏览器：windows的IE浏览器
4).App store：苹果应用商店
5).finder文件管理器：windows的计算机
/**************************计算机基础**************************/
//Mac快捷键
command+空格 //切换输入法
command+F //查找、替换
command+N //新建
command+tab //切换应用程序
command+shift+3/4 //截图
command+shift+z //恢复撤销
command+W|Q //退出前台|退出后台
command+S|C|V|X|A|Z //保存|复制|粘贴|剪切|全选|撤销
command+B|R //将代码翻译成0/1|运行程序
shift+command+N|M //创建工程|模拟内存警告
command+D //保存网址
F11 //进入桌面

//常用终端命令
cd 目录 //切换到指定目录
cd .. //返回上一级目录
cd /  //切换到root目录
ls  //查询当前目录下子目录活文件
pwd //查看当前路径
ctrl+L //清屏

//vi编译器的使用：用来编写c语言程序
vi test.c //打开|新建test.c文件
i //命令模式->编辑模式
#include <stdio.h> //编写一段c语言代码
int main() {
    printf("hello world\n");
    return 0;
}
esc //退出编辑模式
:wq //保存代码：返回到命令行模式
//通过gcc编译器编译
gcc test.c -0 t //test.c需要编译的C语言源文件|t将要生成可执行文件
./t //运行程序

//计算机常识
1.计算机只能识别0|1，计算机能识别的指令也是由0和1组成，计算机中存储和操作的数据都是由0和1组成；
2.计算机语言：机器语言(只有0和1-0表示不加电，1表示加电)|汇编语言|高级语言
/**************************C语言基础**************************/
//C语言概述：
1.C语言由很多"程序段"组成；
2.C语言每条语句后面+";"
3.同一个程序有且仅有一个main()函数;

//main函数：系统自动调用
#include <stdio.h> //告诉系统printf()函数在什么地方
int main() {
    // \n默认换行
    printf("hello world\n"); //执行代码
    return 0;
}

//C语言的执行流程：编写程序->将自定义函数进行编译->目标文件/C语言函数库进行链接->可执行文件->运行

//关键字
1.特征：全部小写|在Xcode中显示不同的颜色|一共32个
2.分类：流程控制关键字+数据类型关键字

//标识符
1.概念：程序员自己在项目中起的名字|不能与关键字同名
2.命名规则：由字母、数字、下划线组成|严格区分大小写、不能以数字开头
3.命名规范：1.有意义的名字|2.驼峰命名(除首单词以外其他单词首字母大写)sendMessage

//注释：不会参与编译(不会被翻译成0和1)
1.单行注释：// 单行注释
2.多行注释：/*多行注释*/
3.文档注释：/**文档注释*/

//数据类型：
1.静态数据：一般以文件的形式存储在硬盘|静态数据类型->动态数据类型：从磁盘加载到内存
2.动态数据：一般存储在内存中|访问速度快
3.计量单位：1byte = 8bit|1KB = 1024B|1MB = 1024KB|1GB = 1024MB|1TB = 1024GB
4.分类：基本数据类型(short|int|long|char|float|double)|构造类型|指针类型|空类型

//常量：不能改变的量
1.整型常量(整数)：二进制|八进制|十进制|十六进制
short sum = 10; int sum = 15; long sum = 100;
2.实型常量(小数)：单精度|双精度
float sum = 5.2f; double sum = 88.8;
3.字符型常量：普通字符|转义字符
char sum = 'a' //''只能存放单个字符
char sum = '13' //错误：13是由2个字符组成
4.字符串常量："hello world"

//变量：
1.使用变量之前必须先定义变量(申请一块存储空间)
int sum; //定义变量：分配唯一的存储空间
sum = 9; //给变量赋值：给存储空间存储数据|变量的第一次赋值称为初始化init|使用变量之前必须init、不然存储的都是垃圾数据
int value,number; //连续定义：开辟两块存储空间
printf("value = %i",value); //获取value：占位符|编译期间才知道具体数值
int number = 10; //定义同时初始化
//完全初始化
int value,number;
value = number = 10;
//部分初始化：value没有init|number = 10
int value,number = 10;
2.作用域：从定义的那一行开始直到大括号/遇到return结束
1).局部变量：定义在{//...}内部的变量
2).全局变量：xxx
3.内存分析：
1).字节地址是连续的|内存是由字节地址组成的
2).内存寻址：从大到小|&变量名称：变量的详细地址
printf("%p\n",&number) //输出变量的详细地址：十六进制

//printf()函数|scanf()函数
1.printf()函数：输出函数
1).格式符：%i、%f、%c、%lf
2).指定位宽：%mf、%mi //m就是位宽(占据几列)|默认右对齐、左边补空格
int number = 99;
float value = 3.1456
printf("%5i",number); //   99
printf("%-5i***",number);//99   ***
printf("%05i",number); //宽度不够补0、够了按照实际输出|宽度够直接显示|0表示补充0、5表示占5列
printf("%.2f",value); //保留两位小数
printf("%.*f",n,value); //保留n位小数
2.scanf()函数：输入函数|阻塞式函数|敲击\n告诉系统输入完毕
int number; //定义number接收数据
printf("请输入一个数据：")
scanf("%i",&number); //必须加上&
scanf("%i,%i",&num1,&num2); //FIXME:什么情况下，scanf()函数自动终止？
实现原理：scanf()函数只要输入缓冲区中有内容，就不会要求用户输入数据；
3.有效位数：从第一位开始算起|float有效位数为7位(系统固定)|double有效位数位15位

//运算符
1.算术运算符：+|-|*|/|% | 相同类型变量算术运算：结果类型不变
result = 1 + 3 + 6 * 5 / 3; //result = 14 |优先级：*|/ > +|-
result = -10 % 3; //result = -1|result正负性取决于左边的操作数
1).自动类型转换(隐式转化)
int num = 10.8; //int占4个字节|double占8个字节
2).强制类型转换(显式转化)：原表达式的值不变、强转以后结果改变
int num = (int)10.8;
3).自动类型提升：系统会将"小类型"->"大类型"|不会损失精度
int result = 10+9.9; //只有相同类型的运算符才可以运算：必须"自动类型提升"
注意：参与运算的操作数类型和结果的类型必须一致；
2.赋值运算符：=|+=|-=|*=|/=|%=|结合性：从右到左
result = 5; result += 5; //result = 10
3.自增|自减运算符：
result = 5;int sum = result++;result--; //先赋值、再result-1|result = 5|sum = 5
int sum = ++result; //sum = 6|result = 6
4.sizeof运算符：一个数据类型|常量|变量在内存中占有字节数
int size = sizeof(10);=>int size = size 10; //()可以省略
int x = 9.8; int size = sizeof(x);=>int size = sizeof x; // ()可以省略
int size = sizeof(float); //不能省略
5.逗号运算符：,
// 一般很少使用,获取表达式的结果|一般使用,连接多个表达式
if let count = array.count, let size = count + 1 {
    //整个,表达式的结果==最后一个表达式的值
}
6.关系运算符：C语言规定：非0即真|>|<|>=|<=|==|!=
a = 10, b = 5;
int result = a > b;// 怎么理解：a>b吗？
优先级：>、<、>=、<=优先级大于!=、==|先优先级、再结合性
7.逻辑运算符：&&、||、!
int sum = a && b;
int sum = a || b;
int sum = !a; // 从右至左
注意：1.C语言规定所有的数值都有真假性，非0即真；
2.&&、||会出现短路现象；
8.三目运算符:
int max = a > b ? a : b;

//流程控制基本概念
1.if语句：if语句可以嵌套|嵌套可以使用&&、||、!替代
if() {
//执行代码
}
if() {
//执行代码
} else {
//执行代码
}
if() {
//执行代码
} else if () {
//执行代码
} else {
//执行代码：可以不需要这一句|可选类型
}
2.switch语句：


//值传递|指针传递
/**************************Objective-C基础**************************/
//认识Objective-C语言
1.概述：面向对象的C语言|完全兼容C语言|C语言代码可以直接编译在Objective-C工程中；

//面向对象：
1.概念：
2.特性：
1).封装性：
3.面向对象编程|面向过程编程的区别：
1).







/**************************UI基础**************************/
//认识UI(User Interface)
1.概述：用户通过UI与用户进行交互|传入用户的请求|反馈运行的结果

//iOS的坐标体系

//Main()函数

//UIWindow

//应用程序的生命周期

//UIView|UIViewController

//UILabel

//定时器

//关于适配：
1.系统适配：
2.机型适配：
3.控件适配：
/**************************项目实战**************************/
/**************************swift基础**************************/
/**************************实用技术(swift版本)**************************/
/**************************补充部分**************************/
//工具网站：
https://www.macx.cn
https://xclient.info
/**************************计算机基础**************************/
1.给定链表的头指针和一个结点指针，在O(1)时间删除该结点。
链表结点的定义如下：
struct ListNode {
    int m_nKey;
    ListNode* m_pNext;
}
函数的声明：void DeleteNode(ListNode* pListHead, ListNode* pToBeDeleted);
2.语句倒序：I am Bruch；（语言随意：不能使用伪代码）
3.
/**************************面试题部分**************************/
1.什么是操作系统？
Q.直接运行在硬件上的系统软件，其他任何软件都必须在操作系统上运行；
2.iOS程序在执行main函数之前做了哪些操作？
Q.
3.一个App可以有几个UIWindow？
Q.
4.view的生命周期分别是什么？
Q.
5.bounds和frame的区别？
Q.
6.-(void)loadView {}做了什么？
Q.
7.NSOperation什么时候从queue中移除？
Q.
8.ViewController生命周期？
Q.
//参考网站：
http://www.cnblogs.com/Piosa/archive/2012/02/22/2363234.html
/**************************难点部分**************************/
1.Objective-C项目怎么设置可以全局设置头文件；
