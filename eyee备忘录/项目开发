### DouNew(原蜂潮)
//概述：Objective-C与swift混编：
- swift怎么调用Objective-C？
- Objective-C怎么调用swift？

//整体布局：
- Objective-C部分：masonry
- swift部分：snapKit
- 部分页面：xib

//数据本地化存储：


//网络请求：


//框架：
社区|商城|球鞋|消息|我的

//具体开发：
- 整体分析UI稿：该怎么进行UI切割
- UI布局：进行UI布局+点击事件传递
- 新建Model：与后台进行数据联调
- 集成同事代码：上测试
- 修复bug：送审


### NBSDK
//概述：Objective-C编写|SDK

//整体布局：xib


### 优生活
//概述：Objective-C编写|SDK

//整体布局：masonry


### 项目细节
- 自己的事情自己做：
业务参数最好在model中先处理好|View需要改变状态最好在View内部先处理好逻辑，外部使用数据去驱动

### 项目难点

### 面试难点


所有vc应该有一个基类：DNBaseViewController
自定义customView|customModel
Objective-C语言中：UI控件|数组也可以直接用懒加载
设置UI控件：setupUI
custom|system


swift中enum/struct都是比类更厉害
section|switch

App中哪些需要存放在本机|App中的缓存机制


隐藏View：1.使用隐藏属性、2.将View的宽和高设置为0

currentMonth // 当前月份
historyMonth // 历史月份

如果是数组就是dateList

如果是字典就是DateModel


safeArea // 这是什么意思
constrain to magins //没有作用：为了plus/iPhone X布局尽量到中间


对于swift:我们对所有的vc都需要lazy

对于oc:我们也可以lazy

对于cell  我们一般不需要把model传进去  再传出来  我们一般是把cell传出来    然后通过cell拿到indexPath  再通过indexPath拿到model


站内信：xxx

- 创建UILabel/UIButton有固定方法(不使用系统方法)；
- 封装可以使用的BadgeView；
- 学习snapkit使用方法；
- UIView中不能跳转：使用代理让实现在VC中进行；


## snapkit中有三个方法
- makeConstraints  //设置布局
- remakeConstraints  //移除以前的布局、重新布局
- updateConstraints //更新布局


# cell上的数据必须放在contentView上面


App开发不能限制用户的操作


### 加载刷新
/***********************json按页下载数据******************************/

//1.声明当前页数、总页数

self.page = 1

self.maxPage = 1

//2.首次加载
page传入1-开始网络请求
//3.请求完成：开始赋值
self.page = model.page
self.maxPage = self.maxPage(byTotalSize: model.total, pageSize: model.size)
判断当前页面是否大于最大页面：大于停止刷新
//4.再次网络请求：
page++ //判断是否大于最大页面：大于停止刷新
self.page = model.page
self.maxPage = self.maxPage(byTotalSize: model.total, pageSize: model.size)
判断当前页面是否大于最大页面：大于停止刷新
/////CommunityCommentDetailController.swift

- MVC模型：
M - 写模型：按照文档写属性一一对应；

V - View：可以加一个取cellID的方法
- 第一步：写出所有的属性：给属性布局
- 第二步：将属性的点击事件传出来
- 第三步：设置方法config：可以更新UI
- 1.在view中新建config中需要传进来的属性：用于全局
2.通过代理传出去

C-大布局：代理方法
- 通过sendRequest获取model
- 

1. 一般项目都是使用cocoaPods管理：更加方便；
2. 一般使用Assets管理图片：自己试试；
3. 一般技术用来看后台接口的工具App是什么？？？
4. 一般App不需要什么都写在服务端
5. //这个坐标是在哪里开始算起的：状态栏？导航栏头部、导航栏底部
    _topView = [[UIView alloc]initWithFrame:CGRectMake(0, 20, self.view.frame.size.width, 40)];
read Base value to memory

App哪些信息需要存储在本地：可能会涉及到多表查询

App的缓存机制：有哪些？？？

什么是b2b、什么是b2c、什么是c2c

隐藏控件：将一个控件的height设置为0

masonry的三个方法具体怎么用？
设置约束
更新约束
删除约束

学会了怎么设置cell自适应：配合设置控件高度为0一起使用；

一般使用svn管理资源文件、使用git管理代码文件

YYText怎么使用、有什么作用？？？

对json的格式还不是很熟悉

常见App一些功能需要怎么做：业务方面(服务端、客户端之间的通信)


开发静态库和动态库：
静态库解决不了第三方库的重复代码问题；

### 开发项目之前需要确定：
- 使用什么开发框架：
- 使用什么设计模式：
- 使用什么数据库：
- 使用什么适配：

### 项目分类
- GitHub  个人项目
- Gitee   项目总结

### 项目模块
- 首页：
- 直播：
- 发现：
- 我的：

### SDK项目功能
- 初始化
- 更新
- 公告
- 切服
- 统计
- 注册登录
- 自动登录
- 三方登录
- 社会化分享
- 网易七鱼客服
- 悬浮窗
- 实名认证
- 支付

### App项目功能
- 欢迎页、闪屏、功能介绍
- 强更、公告
- 导航栏、logo、搜索
- 资源位、详情、评论
- 推荐内容：简介&详情
- 直播、视频
- 聊天、弹幕
- 关注、点赞
- 定位：城市选择器
- 拍照：上传、评价
- 登录、注册
- 强制下线，封号
- 消息、扫码
- 推送、投放
- 收藏、缓存
- vip系统：支付
- 联系客服、反馈
- 订单查询、悬浮框

### 开发技巧
- 阅读需求文档：先抽象类、再分析类与类之间的关联；
- 如果逻辑复杂：可以先写伪代码、然后翻译成代码；
- 可以先写注释，再写代码；
- 开发流程：搭界面->获取网络数据->显示数据到UI；

### 市场App具体实现分析

### 全栈工程师
- C语言：OK
- Objective-C语言：OK
- iOS编程：OK
- Java语言：OK
- Android编程：OK
- Swift语言：OK
- h5/css/js：OK
- Web前端：OK
- React Native：OK
- php：
- Web后端：
- Python：
- C++：
- 运维/IT：


C语言-OC-swift-java-kotlin-h5-rn

//工作中遇到的困难：
- UI太难了：
- 游戏和原生的交互
- 


https://www.jianshu.com/u/e15d1f644bea

///////  常用的json格式

{

    "code":1511200,
    "expiretime":0,
    "msg":"当返回码不是1511200时才会出现，返回错误信息",
    "data":{
        "productid":"商品id",
        "productname":"商品名",
        "imageurl":"图片地址",
        "imglist":"多张图片逗号分隔比如 url,url,url...",
        "sku":"货号",
        "sellrule":"发售细则",
    "sneakertype":"0：是C2C，1是B2C",
        "status":"0：未开始，1： 进行中，2：已结束",
        "price":"double 价格",
        "activityid":"发售的活动id",
        "activesideid":"发售方的id",
        "activesidename":"发售方名称",
        "activesideimageurl":"发售方头像",
        "createtime":"发布时间即创建时间",
        "drawstarttime":"抽签开始时间",
        "drawendtime":"抽签截止时间",
        "sellstarttime":"发售开始时间",
        "sellendtime":"发售截止时间",
         "marketprice":"市场参考价"
        "sellway":"发售方式",
        "selladdress":"发售地址",
        "sharecount":"int 分享数",
        "remindcount":"int 已设置过的提醒数量",
        "remind":"int 0:未设置提醒，1:已设置提醒",
        "commentcount":"int 全部评论数量",
        "labellist":[
            {
                "id":"标签id",
                "name":"标签名",
                "explain":"标签说明"
            }
        ],
        "shareinfo":{
            "url":"h5链接",
            "title":"标题",
            "content":"分享内容",
            "icon":"图片"
        }
    }
}


开放者官网：https://developer.apple.com/cn/
苹果官方API：
- 面向iPad的App开发；
- 为iphone开发；
- 为Apple Watch而设的App
- ARKit 2
- 机器学习
- Siri捷径
- Mac App Store
- WWDC18
- 开放者经验分享



//使用SnapKit给控件添加约束常见错误：https://blog.csdn.net/Haikuotiankong11111/article/details/51800761
1.简单的约束冲突不能有：比如控制了左边和把右边就不能在设置宽度

//cell的自适应：https://www.jianshu.com/p/aee265022414
1. 设置estimatedRowHeight(预估高度)：必须设置
2. 


CGFloat的意思是什么？

iOS中关于图片缓存和缓存cell的高度

适配：系统适配
iphone尺寸
iPad尺寸

UILabel在Autolayout中可以自动设置高度

开发者关注的问题：



{
    "code":1511200,
    "expiretime":0,
    "msg":"当返回码不是1511200时才会出现，返回错误信息",
    "data":{
        "productid":"商品id",
        "productname":"商品名",
        "imageurl":"图片地址",
        "imglist":"多张图片逗号分隔比如 url,url,url...",
        "sku":"货号",
        "sellrule":"发售细则",
    "sneakertype":"0：是C2C，1是B2C",
        "status":"0：未开始，1： 进行中，2：已结束",
        "price":"double 价格",
        "activityid":"发售的活动id",
        "activesideid":"发售方的id",
        "activesidename":"发售方名称",
        "activesideimageurl":"发售方头像",
        "createtime":"发布时间即创建时间",
        "sellstarttime":"发售开始时间",
        "sellendtime":"发售截止时间",
        "marketprice":"市场参考价"
        "sellway":"发售方式String 
0 - 线上抽签 1 - 线上发售 2 - 先到先得 3 - 短信抽签 4 - 拿号抽签 5 - 现场领号 6- 现场抽签 7 - 排队抽签 8 - 微信抽签 9 - 小程序抽签",
        "selladdress":"发售地址",
        "sharecount":"int 分享数",
        "remindcount":"int 已设置过的提醒数量",
        "remind":"int 0:未设置提醒，1:已设置提醒",
        "commentcount":"int 全部评论数量",
        "labellist":[
            {
                "id":"标签id",
                "name":"标签名",
                "explain":"标签说明"
            }
        ],
        "shareinfo":{
            "url":"h5链接",
            "title":"标题",
            "content":"分享内容",
            "icon":"图片"
        }
    }
}
#



必须要看：https://www.cnblogs.com/lihaibo-Leao/p/3471556.html

cell内部如果某一个控件不需要我们可以更新布局为0
再更新


//项目中：如果Model中需要新的数据：可以直接在Model中创建->然后拿出来使用
如果某个ui需要改变：可以在内部改变->vc中可以调用方法告诉view你的view显示需要改变

在开发中，我们一般UIButton会使用custom、而不使用system

代码修改以后：必须要测试

抓包：
1.把电脑的网络共享出来：一般使用网线(网速快)、也可以使用Wi-Fi
2.用手机连接该网络：手动配置ip和端口
3.抓包https还需要安装证书
4.开始抓包


//可以通过mock修改数据
5.保存返回数据：然后修改数据 Save Response...
6.使用本地数据：Map Local

1.为了防止cell的数据混乱：我们需要每次cell刚出现的时候给cell重新赋值、或者移除Cell中的某个控件
2.数据源发生改变：我们就必须要调用reload方法

https://www.growingio.com/projects/QRe05n9q/homepage

dana@eyee.com
Guhun123


swift中：if可以,判断多个条件
_Nullable //可以为空
_Nonnull //不能为空

自定义UI：如果你希望整个UI都可以点击：可以直接在整个UI上面添加touch方法


http://tool.oschina.net 工具网站


Xcode中有：打开"Main Thread Checker"可以判断线程是否使用合理

swift中：如果是String = ""
如果是类：一般会怎么样？？
一般会声明+实现


给对象赋值不需要初始化
给



1.什么时候更新model?
1).网络加载数据：更新model；2).本地上传数据：之后更新model；

一般对象我们都设置var
对象赋值不需要init
给对象属性赋值：必须要init


不能欺负Apple


对于布局：一般不建议写死

一般先把左上角|中点控制好；

然后把宽|高控制好

### 15个问题
 - 自我介绍
 - C语言部分
 - OC部分
 - swift部分
 - UI部分
 

间距：一般不用up|all

尺寸：一般使用up|all

如果对于5s的屏幕：太小了  间距也可以使用up|all

不要判断maxPage   不要过分相信服务端

自己的代码必须有足够的兼容性   


git上面的：stash
fir的使用：怎么使用
一般公司打包：怎么打包


    /*
    屏幕宽度：screenWidth
    需要几行：4行
    每行的最小间距：10
    (screenWidth - (4+1)*10)
    */
    
    UICollectionViewDelegateFlowLayout
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, sizeForItemAt indexPath: IndexPath) -> CGSize {
        return CGSize(width: (screenWidth - 50) * 0.25, height: (screenWidth - 50) * 0.25)
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumLineSpacingForSectionAt section: Int) -> CGFloat {
        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, minimumInteritemSpacingForSectionAt section: Int) -> CGFloat {
        return 10
    }
    
    func collectionView(_ collectionView: UICollectionView, layout collectionViewLayout: UICollectionViewLayout, insetForSectionAt section: Int) -> UIEdgeInsets {
        return UIEdgeInsets(top: 10, left: 10, bottom: 10, right: 10)
    }
    
    
    
    
    
    https://xclient.info
    
    
    
bilibili的开源框架


SnapKit布局：我们不用按顺序布局|可以直接先布局底下的样式   再布局上部的样式


可选类型 ?? "" //防止可选类型为nil


可以规定约束的优先级




OC|Swift相互调用：

https://blog.csdn.net/yishengzhiai005/article/details/53927569

// 组件化开发实践
https://www.jianshu.com/p/f472fa9f0616

//RxSwift

swift中一般都需要init|对于Int等数据类型、默认赋值等于-1
为什么是-1呢？？？？因为-1代表着不正确

www.hangge.com

js框架+原生渲染 react native

flutter+原生 

weex

vue


自己的问题自己把关：不能让别人给自己把关

别人的事



找问题一定要从外向内找、找不到在找旁边的
千万不要还没有找进去  就开始在旁边找
这样很能迷失方向：让人很烦躁、不安   然后找不到答案、一定要静下心来

写代码一定要细心  超级细心

pod repo update // 更新电脑本地保存的版本库中的版本信息

遇到{就会给它分配一个存储空间、直到遇到}该存储空间会被释放


如果只需要上拉加载、不需要下拉刷新

这时候可以把下拉刷新不写：直接在viewDidLoad() {
    中网络请求：然后执行上拉加载：最开始的网络请求可以设置为page = 1
}


swift怎么写网络请求：


OC怎么处理网络请求：



UITableViewHeaderFooterView这个UIView怎么说？





2018年终总结及2019年工作计划报告
回首2018年，感慨万千。在过去的一年里，我经历了两份工作，从最开始的游戏公司到现在的电商业务，
自己不仅经历了找工作的艰辛，更是经历了工作性质转变的历程。虽然过程很艰辛，但是我也是收获良多。
整个2018年，从业务的角度。我配合业务部门讨论、评估、开发了发售活动、登录|注册改版、拉新抢购活动...等一系列工作。从技术角度，更是让我学会很多技术。实践了很多技能、尝试了很多可能。成果也是固然很多，特别是我们的社区顺利上线、各种功能日趋完善。希望我们的社区能在新年期间迎来大爆发。
展望2019年，任重道远。在新的一年中，我最首要的是要正视自己的问题，通过过去一年的经历(面试&工作)也深感自己的不足，不论是专业技能方面。还是业务方面都还有更大的进步空间。这块我也会在2019年的工作中重点针对去弥补，快速跟上工作发展的步伐。对于2019年。工作计划方面：对社区内容的开发跟进上面、特别是增长方面摆在重点方位上，包括后期社区的内容优化、新增社区可玩性内容、增长方面、配合工作从事砍价、拉新等活动。工作安排方面：主要还是以公司领导安排为主，重点参与到工作中去，然后在重点配合完成各种工作。




// 将一个图片位于什么部位开始拉伸(以原点为中心点)
// 返回一个UIImage
UIImage.resiezableImage(with: UIImage(named: "calendar_bg_white"), edgeInsets: UIEdgeInsets(top: 0.5, left: 0.5, bottom: 0.5, right: 0.5))


拿到页面首先分析UI布局  写出UI界面    然后再分析要不要分页加载



每次写代码如果有疑问  或者测试改了代码   都需要做标记：// FIXME  然后最重要的是
必须在发版的时候全局搜索FIXME


都是经验不足吃的亏


技术不行  做个程序员真不行

1.严格按照设计稿设计UI
2.一般设置UI的时候一定要想到怎么当文字过长会怎么样

如果UI显示不正确  变小了    考虑可能的原因   图片压缩了   图片有边角   但是UI没有给图片   这样一般让图片和UI一样大


如果App的跳转比较像（就是model不一样）
我们可以对model进行赋值
新建一个model   对model进行赋值




一个需求的开发过程：
1.需求讨论阶段：


OC中可以为nil \\\\那么swift必须用可选类型接受

0.账号：zaliebusiness@126.com|Eyee@934934
1.证书：12月3号
2.配置文件：douniu_Adhoc
3.fir账号-编辑-上传
huarentrade@126.com
Eyee@934


swift中_代表调用的时候可以忽略参数名称

// 滑动视图展示
1.需要一个UIScrollView|UIView|UIButton|




// flutter


// dart


以后涉及到分页加载......必须参考使用dana的CommunityDiscoverViewController页面



第一：分页加载问题：怎么做分页
参考CommunityDiscoverViewController
第二：data后面紧跟[]、证明后面是数组、需要转换成array   然后把这个数组作为数据源   开始操作代码


// Mock数据网址
http://mock.api.eyee.com/editor


在xib中，command选中两个控件   可以让他们等宽、然后修改比例


GIO转化变量指的是：支付成功以后   这个是通过什么方式转化过来的
先选择C2C支付成功->然后选择转化变量  看数据



数据库问的问题：数据的增删改查、
多表的链接查询、数据回滚

cell的复用：哈哈哈

内部用的什么类型数据
外部就必须用什么类型的数据接受


不能内部是字典   外部是数组


如果json是一个model   你就用字典接受
然后传出来的必须也是model
"data":{
    // 这是一个字典
}
外层也必须使用model去接收->然后取出来model里面的list->如果需要分页还需要拼接list


如果json是数组的话。必须用数组接受
"data"[{
    // 这是一个数组
},{
    
}]
必须使用数组去接受-> 然后外层也必须使用数组来接受：可以直接等于


抓包的原理

https可以被抓包吗


抓包：怎么配置：记录下来

腾讯文档：怎么使用

http://idea.lanyus.com/

swift中main函数消失：https://blog.csdn.net/zhao18933/article/details/46640657

UITableView调用reloadData()会发生什么问题


### mac装机必备
- command + D   //收藏书签
- 

https://github.com/celiaDeveloper?tab=repositories


1.修复线上bug/增加线上内容...base分支

2.新功能/新需求_01...新建分支 <br>
3.新功能/新需求_02...新建分支 <br>
4.新功能/新需求_03...新建分支 <br>

发版本...把1，2，3，4合并到发版分支->新建v3.3.x发版本分支

cell因为是复用的   所以cell有if/就必须有else
不让做不到让数据->驱动->UI


[A hasPrefix:B]; // A是否是以B字符开头的

程序间通信：第一我们需要把string->url
我们需要判断是否可以打开url->可以打开我们在打开->打开以后，我们再通过AppDelegate中代理回传。


短信验证很简单：只用你输入手机号码 、   然后请求网络 、 获取到验证码 、输入验证码    再次请求网络 、就是所谓的登录成功


国际化：文字的国际化、图片的国际化 ////重点追踪

//RunTime  运行时：NSString  编译时：NSData
NSData *data = [NSString stringWithFormat:@"%d", 12];

iOS/Android/web/小程序/rn/flutter/php


// UICollectionView的自适应：
1.我们可以现在外部给cell一个预估的宽/高
2.然后在内部给cell进行内容向外部撑开

https://github.com/duf1991/DYFBuyApp

// 代码规范
1.类名/枚举名称都要首字母大写
2.变量名/方法名第一个字母小写。从第二个字母开始大写
3.通用写成全局、不通用写成局部
4.单项数据：Item/Info。。。数据模型：Model。。。数组List

如果某一个页面接口很多：1.可以让后台做接口的聚合
2.可以把每个接口的model整合到一个接口中


写App之前：必须要先封装好所有的东西。。。再开始开发
1.确定App的整体框架；
2.封装各种UI（图片+文字的btn/toast/alert）
3.网络请求封装
4.确定各种数字/文字等UI显示
5.确定开发需要的适配代码(怎么做适配)
6.设置BaseViewController
以上就是最基本的一些封装和前期准备。。。然后再考虑你要写App。。。
你要做业务开发。

时间格式：
12小时制："yyyy-MM-dd HH:mm:ss"
24小时制：“yyyy-MM-dd hh:mm:ss”

//任何功能都需要跟安卓对比
1.对比之间的显示有没有什么问题；
2.对比数据刷新以后有没有什么问题；
3.对比点击/挑转/分享等操作有什么问题；



