/**
名称：iOS笔记
作者：谢吴军
*/
/**************************前期概述**************************/
//开班须知
1.建议学习时间：
上午9:00-12:00 | 下午14:00-18:00 | 晚上19:30-21:30
2.学习内容：
基础班(4周)：C语言 | Objective-C | swift语言
就业班(4个月)：多线程 | iOS开发 | HTML | React Native
3.学习方法：
1).专心听讲：注重听懂、理解
2).建议准备笔记本：记录重点
3).先自己解决->百度->谷歌

//iOS开发
1.概述：
1).iOS是一款由苹果公司开发的操作系统(OS)
2).什么是iOS开发：开发iphone/iPad手机软件开发
3).主流操作系统：iOS、Android、黑莓
4).什么是操作系统：直接运行在硬件上的最基本的系统软件，其他软件必须依赖操作系统才能运行
2.准备：
1).编程语言：swift > Objective-C > C语言 > C++
2).开发工具：Xcode
3).电脑系统：MacOS
4).真机设备：iphone|ipad
5).iOS证书：调试证书|发布证书
3.Apple硬件：
1).iPhone：2007年发布iphone1/2008年发布iphone2(3G)
2).iPad：2010年发布iPad1(大概一年发布一款)
3).ipad mini：2012年发布iPad mini1
4).ipod Touch：没有打电话功能的iphone
5).Apple TV：需要翻墙(国内被小米模仿)
4.Mac系统：基于Unix内核
1).Dock工具栏：应用程序列表(默认位于屏幕下方)
2).系统偏好设置：windows的控制面板
3).safari浏览器：windows的IE浏览器
4).App store：苹果应用商店
5).finder文件管理器：windows的计算机
/**************************计算机基础**************************/
//Mac快捷键
command+空格 //切换输入法
command+F //查找、替换
command+N //新建
command+tab //切换应用程序
command+shift+3/4 //截图
command+shift+z //恢复撤销
command+W/Q //退出前台|退出后台
command+S/C/V/X/A/Z //保存/复制/粘贴/剪切/全选/撤销
command+B/R //将代码翻译成0/1、编译程序/运行程序
shift+command+N/M //创建工程/模拟内存警告
command+D //保存网址
command+I //排版
F11 //进入桌面

//常用终端命令
cd 目录 //切换到指定目录
cd .. //返回上一级目录
cd /  //切换到root目录
ls  //查询当前目录下子目录活文件
pwd //查看当前路径
ctrl+L //清屏

//vi编译器的使用：用来编写c语言程序
vi test.c //打开|新建test.c文件
i //命令模式->编辑模式
#include <stdio.h> //编写一段c语言代码
int main() {
    printf("hello world\n");
    return 0;
}
esc //退出编辑模式
:wq //保存代码：返回到命令行模式
//通过gcc编译器编译
gcc test.c -o t //test.c需要编译的C语言源文件/t将要生成可执行文件
./t //运行程序/生成可执行文件

//计算机常识
1.计算机只能识别0|1，计算机能识别的指令也是由0和1组成，计算机中存储和操作的数据都是由0和1组成；
2.计算机语言：机器语言(只有0和1-0表示不加电，1表示加电)/汇编语言(符号化机器语言)/高级语言

//进制转换
1.十进制：用0—9来表示所以的自然数。。。D
二进制：用0—1来表示所有的自然数。。。B
2.为什么要引入二进制？
因为计算机是以二进制形式进行数据存储：二进制存储简单方便；
3.

//运算符
/**************************C语言基础**************************/
//C语言重难点
1.运算符：自增、自减
2.进制转换：不掌握不影响iOS开发
3.条件语句：xxx
4.数组：一维数组
5.循环：重点
6.函数：xx
7.指针：一级指针、多级指针、指针和数组/函数/结构体之间的关系
8.内存管理：内存泄漏、野指针
9.预处理指令：宏、条件编译
10.多文件开发：xx
11.字符串/枚举/指针

//C语言概述：
1.C语言是由很多"程序段"组成
2.C语言每条语句后面+";"
3.同一个程序有且仅有一个main()函数
4.C语言的标准：ANSI C->C99->C11

//main函数：系统自动调用
#include <stdio.h> //告诉系统printf()函数在什么地方
int main() {
    // \n默认换行
    printf("hello world\n"); //执行代码
    return 0;
}

//C语言的执行流程：编写程序->将自定义函数进行编译->目标文件/C语言函数库进行链接->可执行文件->运行

//关键字
1.特征：全部小写|在Xcode中显示不同的颜色|一共32个
2.分类：流程控制关键字+数据类型关键字

//标识符
1.概念：程序员自己在项目中起的名字/不能与关键字同名
2.命名规则：由字母、数字、下划线组成/严格区分大小写、不能以数字开头/必须遵守
3.命名规范：1.有意义的名字/2.驼峰命名(除首单词以外其他单词首字母大写)sendMessage/不是必须遵守

//注释：不会参与编译(不会被翻译成0和1)/可以用来找代码段
1.单行注释：// 单行注释
2.多行注释：/*多行注释*/
3.文档注释：/**文档注释*/
ps.对于很难的逻辑：可以先写注释、再写代码

//数据类型：
1.静态数据：一般以文件的形式存储在硬盘/静态数据类型->动态数据类型：从磁盘加载到内存
2.动态数据：一般存储在内存中/访问速度快/动态数据类型->静态数据类型：手机拍照
3.计量单位：1B(Byte) = 8bit(10101010)/1KB = 1024B/1MB = 1024KB/1GB = 1024MB/1TB = 1024GB
4.分类：基本数据类型(short/int/long/char/float/double)/构造类型/指针类型/空类型

//常量：不能改变的量
1.整型常量(整数)：二进制/八进制/十进制/十六进制
short sum = 10; int sum = 15; long sum = 100;
2.实型常量(小数)：默认情况下所有小数都是double
float sum = 5.2f; //单精度
double sum = 88.8; //双精度
3.字符型常量：普通字符/转义字符
char sum = 'a' //''只能存放单个字符
char sum = '13' //错误：13是由2个字符组成
char name = '男' //错误写法：一个汉字占3个字节
ps.'\n'虽然有两个字符组成、但是还是字符型常量/转义字符
4.字符串常量："hello world"/"a"也是字符串常量

//变量：
1.使用变量之前必须先定义变量(申请一块存储空间)
int sum; //定义变量：分配唯一的存储空间/申请内存
sum = 9; //给变量赋值：给存储空间存储数据|变量的第一次赋值称为初始化init|使用变量之前必须init、不然存储的都是垃圾数据
int value,number; //连续定义：开辟两块存储空间
printf("value = %i",value); //获取value：占位符|编译期间才知道具体数值
int number = 10; //定义同时初始化
//完全初始化
int value,number;
value = number = 10;
//部分初始化：value没有init|number = 10
int value,number = 10;
2.作用域：从定义的那一行开始直到大括号/遇到return结束
1).局部变量：定义在{//...}内部的变量
2).全局变量：xxx
3.内存分析：
1).字节地址是连续的/内存是由字节地址组成的
2).内存寻址：从大到小|&变量名称：变量的详细地址
printf("%p\n",&number) //输出变量的详细地址：十六进制

//printf()函数|scanf()函数
1.printf()函数：输出函数
1).格式符：%i、%f、%c、%lf
2).指定位宽：%mf、%mi //m就是位宽(占据几列)|默认右对齐、左边补空格
int number = 99;
float value = 3.1456
printf("%5i",number); //   99
printf("%-5i***",number);//99   ***
printf("%05i",number); //宽度不够补0、够了按照实际输出|宽度够直接显示|0表示补充0、5表示占5列
printf("%.2f",value); //保留两位小数
printf("%.*f",n,value); //保留n位小数
2.scanf()函数：输入函数|阻塞式函数|敲击\n告诉系统输入完毕
int number; //定义number接收数据
printf("请输入一个数据：")
scanf("%i",&number); //必须加上&
scanf("%i,%i",&num1,&num2); //FIXME:什么情况下，scanf()函数自动终止？
实现原理：scanf()函数只要输入缓冲区中有内容，就不会要求用户输入数据；
3.有效位数：从第一位开始算起|float有效位数为7位(系统固定)|double有效位数位15位

//运算符
1.算术运算符：+|-|*|/|%  //相同类型变量算术运算：结果类型不变
result = 1 + 3 + 6 * 5 / 3; //result = 14 |优先级：*|/ > +|-
result = -10 % 3; //result = -1|result正负性取决于左边的操作数
1).自动类型转换(隐式转化)
int num = 10.8; //int占4个字节/double占8个字节
2).强制类型转换(显式转化)：原表达式的值不变、强转以后结果改变
int num = (int)10.8;
3).自动类型提升：系统会将"小类型"->"大类型"|不会损失精度
int result = 10+9.9; //只有相同类型的运算符才可以运算：必须"自动类型提升"
注意：参与运算的操作数类型和结果的类型必须一致；
2.赋值运算符：=|+=|-=|*=|/=|%=|结合性：从右到左
result = 5; result += 5; //result = 10
3.自增/自减运算符：
result = 5;int sum = result++; //先赋值、再result-1/result = 6/sum = 5
int sum = ++result; //sum = 6/result = 6
4.sizeof运算符：一个数据类型/常量/变量在内存中占有字节数
int size = sizeof(10);=>int size = size 10; //()可以省略
int x = 9.8; int size = sizeof(x);=>int size = sizeof x; // ()可以省略
int size = sizeof(float); //不能省略
5.逗号运算符：,
// 一般很少使用,获取表达式的结果|一般使用,连接多个表达式
if let count = array.count, let size = count + 1 {
    //整个,表达式的结果等于最后一个表达式的值
}
6.关系运算符：C语言规定：非0即真|>|<|>=|<=|==|!=
a = 10, b = 5; // "="/"=="的区别
int result = a > b;// 怎么理解：a>b吗？
优先级：>、<、>=、<=优先级大于!=、==先优先级、再结合性
7.逻辑运算符：&&、||、!
int sum = a && b; // 与
int sum = a || b; // 或
int sum = !a; // 从右至左
注意：1.C语言规定所有的数值都有真假性，非0即真；
2.&&、||会出现短路现象；
8.三目运算符:
int max = a > b ? a : b;

//输入函数/输出函数|scanf()/printf()
int a;
scanf(“%d”,&a); // 从键盘输入整型变量a的值/scanf函数里面不能做文字性的说明
printf(“%d”,a); // "\n"不能用在scanf()函数中/只能用在printf()函数中

//流程控制基本概念
1.if语句：if语句可以嵌套/嵌套可以使用&&、||、!替代/互斥
if(表达式1) {
//执行代码
}
if(表达式1) {
//执行代码
} else {
//执行代码/必有一个执行
}
if(表达式1) {
//执行代码
} else if (表达式2) {
//执行代码
} else {
//执行代码：可以不需要这一句/可选类型
}
2.switch语句：C语言中'条件表达式'的返回值只支持整数/switch的效率比较高/注意格式
switch (条件表达式) {
// case不能重复|不能放置变量
case 整数: {
    //执行代码
}
    break;
// default可以随便放置|可以放置在上面|也可以放置在最底下|default永远都是最后执行
default: {
    //执行代码
}
    break;
}

//循环语句：反复执行某一段代码
1.循环格式：
1).while()语句：当条件满足开始执行循环体直到不满足条件停止执行
2).do-while()语句：先执行循环体直到不满足条件停止执行
3).for()语句：最常使用的循环语句
2.死循环：
1).for (;1;) {
    // 循环体
}
2).RunLoop
3.循环嵌套：
for(int i = 0;i < 2; i++) {
    for(int j = 0; j < 5; j++) {
        // 执行代码：10次
        break; // 跳出循环体
        continue; // 跳出本次循环、开始下次循环
    }
}
4.循环思想：累加思想|计数思想
注意：如果循环的增量在执行完毕循环体以后还需要使用-while
如果循环的增量在执行完毕循环体以后不再使用-for

//数组

//函数

//指针

//值传递|指针传递

//字符串

//结构体
/**************************Objective-C基础**************************/
//认识Objective-C语言
1.概述：面向对象的C语言/完全兼容C语言/C语言代码可以直接编译在Objective-C工程中；
2.源文件：.h/.m/.mm；
3.关键字：C语言关键字在oc中都可以使用/新增部分关键字：@interface、@public等；
4.数据类型：BOOL/Block/SEL/null
5.#include -可能会出现重复包含头文件/#import -可以避免重复包含头文件

//面向对象OOP
1.概念：OOP是把问题里拥有相同属性的东西建立一个类
2.特性：
1).封装：将数据和基于数据的操作封装在一起，数据被保护在类的内部，系统的其它部分只有通过被授权的操作才可以访问数据；将不需要对外提供的内容隐藏起来：把属性隐藏起来，提供公共方法对外访问；
2).继承：又称为派生
1.定义：父类的属性(成员变量：不包括私有)和方法，子类可以直接获取；
2.派生：子类保持父类中的行为和属性，新增其它功能；
3).多态：程序中可以有同名的不同方法共存，利用子类对父类方法的覆盖和重载在同一个类中定义多个同名的方法来实现；
3.面向对象编程/面向过程编程的区别：
1).面向对象编程是把问题中拥有相同属性的东西建立一个类，然后创建类的对象；
2).面向对象编程注重生活逻辑、面向过程编程注重数学逻辑；

//类：属性+行为(谁最清楚这个行为，那么行为就属于谁)
1.定义：具有相同和相似性质对象的抽象就是类；对象的抽象就是类，类的具体化就是对象；
2.类 = 结构体(存储数据) + 函数(管理数据)；swift中结构体作用很大！！！

//类方法
1.概念：C++中的静态方法|不属于任何一个对象|通过类名调用|不能直接调用对象方法和成员变量
2.对一个功能模块留下简单的对外接口：+(void)addNum:(NSInteger)newNum;
3.单例：OC语言不允许对象静态内存分配，不能声明全局变量；

//构造方法
1.定义：OC中称所有init开头的方法为构造方法/只能被调用一次；
2.作用：初始化对象/初始化对象的成员变量；
3.-(instancetype)init {
    self = [super init];
    // 重写构造方法
    if (self) {
        _name = "10";
        _age = 12;
    }
}
4.-(instancetype)initWithName:(NSString *)name withAge:(NSInteger)age {
    self = [super initWithName:name withAge:age]; // 调用父类
    // 自定义构造方法
}

//字符串
1.NSString：不可变字符串
1).

//数组
1.NSArray：不可变数组/数组的长度确定

2.NSMutableArray：可变数组/数组的长度不确定/类
1).NSMutableArray是一个类
2).数组元素不能是基本数据类型int，必须是对象的引用(指针)
3).

//字典
1.NSDictionary

//网络基础

//内存管理
1.C语言的内存管理：
2.oc的内存管理：

//异常处理
@try...@catch...@finally
/**************************UI基础**************************/
//认识UI(User Interface)
1.概述：用户通过UI与用户进行交互|传入用户的请求|反馈运行的结果

//iOS的坐标体系

//Main()函数

//UIWindow

//应用程序的生命周期

//UIView
1.概述：UIView是所有视图的父类；
2.UIView四个属性是所有视图共同拥有的：
@property (strong,nonatomic) CGRect frame; // 坐标：相对于父视图
@property (strong,nonatomic) CGRect bounds; // 坐标：相对于自己
@property (strong,nonatomic) CGPoint center; // 中心点
@property (strong,nonatomic) CGAffineTransform transform; // 拉伸形变

//UIViewController

//UILabel

//Gif

//定时器

//UITableView
一定要搞懂UITableViewDataSource|UITableViewDelegate的所有方法！！！

//关于适配
1.系统适配：
2.机型适配：
3.控件适配：

//自动布局：
1.autosizing：设置视图和父视图的尺寸关系/iOS6.x以前
2.

//通信：
1.程序之间通信：
/**************************项目实战**************************/
//数据的持久化

//常见三方libs
Masonry/SnapKit-用于屏幕适配
MagicRecord-用于简化CoreData
CSStickyHeaderFlowLayout-实现头部悬停
FLAnimatedImage-让GIF播放不卡
SVPullToRefresh-上拉加载/下拉刷新控件
Reachability-用于检测网络类型

//真机调试
/**************************swift基础**************************/
/**************************实用技术(swift版本)**************************/
/**************************补充部分**************************/
//工具网站：
https://soft.macx.cn
https://xclient.info

#抓包：
1.工具：Charles
2.作用：抓包可以很快定位问题
3.步骤|注意事项：
1).下载安装抓包工具Charles
2).将mac的网络分享出去|手动配置端口、ip
3).如果需要抓取https、需要安装证书
4.衍生的面试题：
1).你平时在工作中使用过抓包工具吗？一般是用来干嘛的？
2).抓包的步骤是怎么样的？通过步骤你能猜测一下抓包的工作原理吗？
3).抓包可以抓https吗？怎么才可以让https不被抓包工具抓取？
